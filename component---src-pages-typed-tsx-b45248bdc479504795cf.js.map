{"version":3,"sources":["webpack://persistent-ui-with-gatsby/./src/pages/typed.tsx","webpack://persistent-ui-with-gatsby/./src/components/header.js","webpack://persistent-ui-with-gatsby/./src/components/layout.js"],"names":["IndexPage","data","path","site","buildTime","to","Layout","Header","siteTitle","React","counter","setCounter","running","setRunning","interval","setInterval","x","clearInterval","style","background","marginBottom","display","margin","maxWidth","padding","marginRight","color","textDecoration","alignItems","onClick","fontSize","fontWeight","defaultProps","children","useStaticQuery","siteMetadata","title","marginTop","Date","getFullYear","href"],"mappings":"oLAWMA,EAAY,SAAC,GAAyC,IAAvCC,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,KACzB,OACE,gCACE,iDACA,2DACiCA,EADjC,uBAC2D,IACxDD,EAAKE,KAAKC,UAFb,KAIA,yBACE,gBAAC,KAAD,CAAMC,GAAG,KAAT,iBADF,IACoC,8BAM1CL,EAAUM,OAASA,IAEnB,a,0FCxBMC,EAAS,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAAgB,EACFC,WAAe,GAAtCC,EADyB,KAChBC,EADgB,OAEFF,YAAe,GAAtCG,EAFyB,KAEhBC,EAFgB,KAchC,OAVAJ,aAAgB,WACd,IAAIK,EAKJ,OAHIF,IACFE,EAAWC,aAAY,kBAAMJ,GAAW,SAAAK,GAAC,OAAIA,EAAI,OAAI,MAEhD,WACDF,GAAUG,cAAcH,MAE7B,CAACF,IAEF,0BACEM,MAAO,CACLC,WAAW,gBACXC,aAAa,YAGf,uBAAKF,MAAO,IACV,uBACEA,MAAO,CACLG,QAAS,OACTC,OAAO,SACPC,SAAU,IACVC,QAAQ,sBAGV,sBAAIN,MAAO,CAAEI,OAAQ,EAAGG,YAAa,SACnC,gBAAC,KAAD,CACEpB,GAAG,IACHa,MAAO,CACLQ,MAAM,QACNC,eAAe,SAGhBnB,IAGL,uBAAKU,MAAO,CAAEG,QAAS,OAAQO,WAAY,WACzC,0BACEC,QAAS,kBAAMhB,GAAW,SAAAG,GAAC,OAAKA,MAChCE,MAAO,CAAEO,YAAa,SAErBb,EAAU,QAAU,QAEvB,uBACEM,MAAO,CACLG,QAAS,eAETK,MAAO,QACPI,SAAU,GACVC,WAAY,SAGbrB,EAAU,SAazBH,EAAOyB,aAAe,CACpBxB,UAAU,IAGZ,QCxBA,EAxCe,SAAC,GAAkB,IAAD,EAAfyB,EAAe,EAAfA,SACVhC,GAAOiC,QAAe,cAU5B,OACE,gCACE,gBAAC,EAAD,CAAQ1B,WAAW,UAAAP,EAAKE,KAAKgC,oBAAV,eAAwBC,QAAxB,UACnB,uBACElB,MAAO,CACLI,OAAO,SACPC,SAAU,IACVC,QAAQ,wBAGV,4BAAOS,GACP,0BACEf,MAAO,CACLmB,UAAU,SAFd,MAKK,IAAIC,MAAOC,cALhB,mBAOE,qBAAGC,KAAK,4BAAR","file":"component---src-pages-typed-tsx-b45248bdc479504795cf.js","sourcesContent":["import * as React from \"react\"\nimport { graphql, Link, PageProps } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst IndexPage = ({ data, path }: PageProps<DataProps>) => {\n  return (\n    <>\n      <h1>All Hail Typescript</h1>\n      <p>\n        You're currently on the page \"{path}\" which was built on{\" \"}\n        {data.site.buildTime}.\n      </p>\n      <p>\n        <Link to=\"/\">Back to index</Link> <br />\n      </p>\n    </>\n  )\n}\n\nIndexPage.Layout = Layout\n\nexport default IndexPage\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","import * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"gatsby\"\n\nconst Header = ({ siteTitle }) => {\n  const [counter, setCounter] = React.useState(0)\n  const [running, setRunning] = React.useState(true)\n\n  React.useEffect(() => {\n    let interval\n\n    if (running) {\n      interval = setInterval(() => setCounter(x => x + 1), 100)\n    }\n    return () => {\n      if (interval) clearInterval(interval)\n    }\n  }, [running])\n  return (\n    <header\n      style={{\n        background: `rebeccapurple`,\n        marginBottom: `1.45rem`,\n      }}\n    >\n      <div style={{}}>\n        <div\n          style={{\n            display: \"flex\",\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `1.45rem 1.0875rem`,\n          }}\n        >\n          <h1 style={{ margin: 0, marginRight: \"1rem\" }}>\n            <Link\n              to=\"/\"\n              style={{\n                color: `white`,\n                textDecoration: `none`,\n              }}\n            >\n              {siteTitle}\n            </Link>\n          </h1>\n          <div style={{ display: \"flex\", alignItems: \"center\" }}>\n            <button\n              onClick={() => setRunning(x => !x)}\n              style={{ marginRight: \"1rem\" }}\n            >\n              {running ? \"Pause\" : \"Play\"}\n            </button>\n            <div\n              style={{\n                display: \"inline-block\",\n\n                color: \"white\",\n                fontSize: 30,\n                fontWeight: \"bold\",\n              }}\n            >\n              {counter / 10}\n            </div>\n          </div>\n        </div>\n      </div>\n    </header>\n  )\n}\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0 1.0875rem 1.45rem`,\n        }}\n      >\n        <main>{children}</main>\n        <footer\n          style={{\n            marginTop: `2rem`,\n          }}\n        >\n          Â© {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}